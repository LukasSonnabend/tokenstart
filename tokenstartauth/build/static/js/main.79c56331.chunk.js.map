{"version":3,"sources":["imgs/Founder_Konstantin.png","imgs/Founder_Lukas.jpg","context/UserContext.js","components/misc/chainIcon.js","components/misc/ProjectCarousel.js","components/misc/GetProjects.js","components/misc/ProjectCarouselGuest.js","components/pages/Home.jsx","components/misc/ErrorNotice.js","components/pages/Login.jsx","components/pages/Register.jsx","components/pages/About.jsx","components/pages/Account.jsx","components/misc/ProgressBar.js","components/pages/project.jsx","components/pages/EditProject.jsx","components/pages/Goals.jsx","components/auth/authOptions.js","components/misc/ProjectSearch.js","components/pages/parts.jsx","components/pages/createProject.jsx","components/pages/FourOFour.jsx","components/pages/ProjectsOverview.jsx","components/pages/payment.jsx","components/misc/ScrollTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createContext","ChainIcons","chain","class","src","ProjectCarousel","props","carousel","useContext","UserContext","userData","setUserData","useState","setProjectList","history","useHistory","console","log","data","projectData","projectDataList","a","Axios","get","projectRes","list","getProjects","useEffect","map","project","index","key","id","className","style","background","projectPictureURL","projectName","sDescription","projectOwnerName","onClick","push","_id","tokenShort","ReactDOM","render","document","getElementById","listItems","GetProjects","projectList","userID","allProjectsList","ownProjects","filter","projectOwnerID","otherProjects","token","user","ownedProjects","undefined","overflowY","scope","React","Children","toArray","item","i","to","icon","faEdit","color","pathname","state","tokenChain","date","slice","tokenName","tokenSupply","toOwner","fontWeight","lDescription","type","data-toggle","data-target","aria-expanded","aria-controls","ProjectCarouselGuest","Home","localStorage","getItem","status","JSON","parse","fullname","ErrorNotice","message","role","clearError","Login","email","setEmail","password","setPassword","error","setError","submit","e","preventDefault","loginUser","post","headers","loginRes","userString","stringify","setItem","refreshToken","response","msg","onSubmit","onChange","target","value","Register","passwordCheck","setPasswordCheck","displayname","setDisplayName","paymentPlan","setPaymentPlan","setFullName","userDescription","setUserDescription","newUser","placeholder","width","rows","About","Konstantin","alt","href","faLinkedin","Lukas","Account","length","accessToken","validateRefreshToken","updateUser","AccessToken","updateUserFunc","cols","ProgressBar","circulating","tokenData","display","padding","gridTemplateColumns","toString","Project","projectInfo","setProjectInfo","editLink","match","params","projectId","data-ride","height","frameBorder","allow","allowFullScreen","classname","data-slide","aria-hidden","projectProps","projectOwnerDescription","EditProject","setProjectName","setTokenChain","shortDescription","setShortDescription","longDescription","setLongDescription","setTokenName","setTokenShort","setTokenSupply","smallestTradable","setSmallestTradable","pictures","setPictures","setToOwner","tokenOwner","setTokenOwner","setSelection","selectedChain","getElementsByClassName","classList","remove","add","picture","deleteProject","toDeleteProject","projectTemplate","editedProject","disabled","Goal","AuthOptions","faSignOutAlt","faUserCircle","searchTerm","SetSearchTerm","resultList","setResultList","showSearch","setShowSearch","matchingProjects","toLowerCase","includes","NavBar","aria-label","listStyle","Footer","CreateProject","newProject","projectPicture","createNewProject","withIcon","singleImage","label","imgExtension","maxFileSize","parseInt","step","FourOFour","ProjectsOverview","allProjects","userName","Payment","location","paymentType","setPaymentType","investment","setInvestment","showQR","setShowQR","qrMessage","for","selected","min","alert","ScrollToTop","prevProps","this","window","scrollTo","Component","withRouter","App","userRes","checkLoggedIn","ScrollTop","Provider","exact","path","component","Goals","Boolean","hostname","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.79c56331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Founder_Konstantin.2b201eff.png\";","module.exports = __webpack_public_path__ + \"static/media/Founder_Lukas.91916898.jpg\";","import {createContext} from 'react';\n\nexport default createContext(null);","import React from \"react\";\n\nexport default function ChainIcons(chain) {\n    switch (chain) {\n        case \"Ethereum\":\n            return <img class=\"tokenIcon\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Ethereum_logo.svg\" />\n        case \"TRON\":\n            return <img class=\"tokenIcon\" src=\"https://banner2.cleanpng.com/20180824/vuw/kisspng-cryptocurrency-blockchain-tron-logo-ethereum-top-2-ethereum-tokens-to-invest-in-bit-world-5b7f9cbfb1e3f4.7066100315350898557287.jpg\" />\n        case \"EOS\":\n            return <img class=\"tokenIcon\" src=\"https://ethereum-balance.de/img/token/eos_1.png\"/>\n        case \"Polkadot\":\n            return <img class=\"tokenIcon\" src=\"https://polkadot.network/content/images/2019/05/Polkadot_symbol_color.png\"/>\n    }\n}","import React, { useState, useEffect, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function ProjectCarousel(props) {\n    const { userData, setUserData } = useContext(UserContext);\n    const [projectList, setProjectList] = useState();\n    const history = useHistory();\n    console.log(props.data)\n    \n\n    var carousel;\n    \n    let projectData = [props.data];\n    //let projectData = [userData.projectList];\n    let projectDataList = projectData[0];\n    console.log(projectData);\n    console.log(projectDataList);\n\n    const numbers = [1, 2, 3, 4, 5];\n    let listItems;\n\n    async function getProjects(){\n        const projectRes = await Axios.get(\"https://tokenstart.herokuapp.com/projects\") \n        setProjectList({\n            list: projectRes.data\n        });\n        // setUserData({\n        //     token: userData.token,\n        //     user: userData.user,               \n        //     list: projectRes.data\n        // });\n    }\n\n    if (carousel){\n\n     \n\n        getProjects();\n    }\n\n    useEffect(() => {\n    \n        //console.log(projectData)\n        if (projectDataList) {\n            console.log(\"running list\")\n            carousel = projectDataList.map((project, index) => {\n                return <div key={index} id=\"projectCard\" className=\"card\">\n                    <div className=\"card-img-top\" style={{background: \"url(\" + project.projectPictureURL + \")\"}}></div>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{project.projectName}</h5>\n                        <p className=\"card-text\">{project.sDescription}<br />Von: { project.projectOwnerName }</p>\n                        <button className=\"btn btn-primary\" onClick={ () => history.push(\"/project/\" + project._id)}>{project.tokenShort} Token</button>\n                        {/* <a href={\"/project/\" + project._id} className=\"btn btn-primary\">Zum Token</a> */}\n                    </div>\n                </div>\n            })\n        }\n\n\n        console.log(carousel);\n        //renders carousel to dom\n        ReactDOM.render(carousel, document.getElementById('projectCarousel'));\n        // document.getElementById(\"projectCarousel\").innerHTML = carousel;\n    }, []);\n\n\n    console.log(carousel)\n\n    return <>\n        <div>\n            {!projectData ? <p>No Data {listItems}</p> : (\n                <>\n                    <div id=\"otherProjects\">\n\n                        <div id=\"projectCarousel\"></div>\n                        {carousel}\n                    </div>\n                </>\n            )}\n        </div>\n    </>\n\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport ChainIcons from \"./chainIcon\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport Axios from \"axios\";\nimport ProjectCarousel from '../misc/ProjectCarousel';\nimport { Link } from 'react-router-dom';\n\n\nexport default function GetProjects(props) {\n\n    const [projectList, setProjectList] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const goToProject = (id) => history.push({\n        pathname: \"/project/\" + id,\n        state: { projectList: userData.list },\n    });\n\n\n    const goToUser = (userName) => history.push(\"/showuser/\" + userName);\n\n    if (props.userID != \"undefined\") {\n        const userID = props.userID\n    } else {\n        const userID = \"\"\n    }\n\n    useEffect(() => {\n\n        async function getProjects() {\n            const projectRes = await Axios.get(\"https://tokenstart.herokuapp.com/projects/\")\n            let allProjectsList = projectRes.data;\n\n\n            setProjectList({\n                ownProjects: allProjectsList.filter(project => project.projectOwnerID === props.userID),\n                otherProjects: allProjectsList.filter(project => project.projectOwnerID !== props.userID)\n            });\n            setUserData({\n                token: userData.token,\n                user: userData.user,\n                list: projectRes.data\n            });\n        }\n\n        getProjects();\n\n        let ownedProjects = [];\n        for (let project in projectList) {\n            if (projectList[project].projectOwnerID === props.userID) {\n                ownedProjects.push(projectList[project].projectOwnerID)\n            }\n        }\n\n    }, []);\n\n    return <div>\n\n\n        {projectList == undefined ? (<p>Please Log in </p>) : (\n            <>\n                <ProjectCarousel data={projectList.otherProjects} />\n\n\n                <h2>Own Projects</h2>\n                <div style={{ overflowY: \"scroll\" }} className=\"col-11 margin0a\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Edit</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Blockchain</th>\n                                {/* <th scope=\"col\">Description</th> */}\n                                <th scope=\"col\">Creation Date</th>\n                                <th scope=\"col\">Token Name</th>\n                                <th scope=\"col\">Token Supply</th>\n                                <th scope=\"col\">In circulation</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                React.Children.toArray(\n                                    projectList.ownProjects.map(\n                                        (item, i) =>\n                                            <>\n                                                <tr>\n                                                    <td><Link to={\"/edit/project/\" + item._id}><FontAwesomeIcon icon={faEdit} /></Link></td>\n                                                    <td style={{ color: \"blue\" }} onClick={() => goToProject(item._id)}>{item.projectName}</td>\n                                                    <td class=\"iconCell\">{ChainIcons(item.tokenChain)}</td>\n                                                    {/* <td>{item.sDescription}</td> */}\n                                                    <td>{item.date.slice(0, 10)}</td>\n                                                    <td>{item.tokenName}</td>\n                                                    <td>{item.tokenSupply}</td>\n                                                    <td>{item.tokenSupply - item.toOwner}</td>\n                                                </tr>\n                                            </>\n                                    )\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <p className=\"d-block d-sm-none\">Scroll -></p>\n                <div className=\"d-block d-sm-none\">\n                    {\n                        React.Children.toArray(\n                            projectList.ownProjects.map(\n                                (item, i) =>\n                                    <>\n                                        <div className=\"horizontalCard\">\n                                            <div className=\"horizontalCardLeft\">\n                                                <div className=\"TokenModel\">\n\n                                                    {ChainIcons(item.tokenChain)}\n                                                </div>\n                                                <p className=\"noMargin\">Created <br/> {item.date.slice(0, 10)}</p>\n                                            </div>\n                                            <div className=\"horizontalCardRight\">\n                                                <p>{item.projectName}</p>\n                                                <p>{item.tokenName} <span style={{ fontWeight: \"bold\" }}>[{item.tokenShort}]</span></p>\n                                                <p>{item.sDescription}</p>\n                                                \n                                                <div className=\"collapse\" id={\"collapseCard\" + i}>\n                                            \n                                                <p>{item.lDescription}</p>\n                                            \n                                                </div>\n\n                                                \n                                                <p>Created by {item.projectOwnerName}</p>\n                                                <button className=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target={\"#collapseCard\" + i} aria-expanded=\"false\" aria-controls={\"collapseCard\" + i} >\n                                                    More Info\n                                                </button>\n                                            </div>\n                                        </div>\n\n\n                                        {/* <tr>\n                                        <td><Link to={\"/edit/project/\" + item._id}><FontAwesomeIcon icon={faEdit} /></Link></td>\n                                        <td style={{ color: \"blue\" }} onClick={() => goToProject(item._id)}>{item.projectName}</td>\n                                        <td class=\"iconCell\"></td>\n                                       \n                                        \n\n                                        <td>{item.tokenSupply}</td>\n                                        <td>{item.tokenSupply - item.toOwner}</td>\n                                    </tr> */}\n                                    </>\n                            )\n                        )\n                    }\n                </div>\n            </>\n\n        )}\n\n\n    </div>\n\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function ProjectCarouselGuest() {\n\n    const [projectList, setProjectList] = useState();\n\n    var carousel;\n    let projectData = [projectList];\n\n    let projectDataList = projectData[0];\n\n    const history = useHistory();\n\n\n    let listItems;\n\n    useEffect(() => {\n        async function getProjects(){\n            const projectRes = await Axios.get(\"https://tokenstart.herokuapp.com/projects\") \n            setProjectList({\n                list: projectRes.data\n            });\n        }\n        if (!projectDataList){\n        getProjects();}\n\n        if (projectDataList && !carousel) {\n            console.log(\"running list\")\n            carousel = projectList.list.map((project, index) => {\n                return <div key={index} id=\"projectCard\" className=\"card\">\n                    <div className=\"card-img-top\" style={{background: \"url(\" + project.projectPictureURL + \")\"}}>\n                    </div>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{project.projectName}</h5>\n                        <p className=\"card-text\">{project.sDescription}<br />Von: { project.projectOwnerName }</p>\n                        <button className=\"btn btn-primary\" onClick={ () => history.push(\"/project/\" + project._id)}>{project.tokenShort} Token</button>\n                    </div>\n                </div>\n            })\n        }\n\n        //renders carousel to dom\n        ReactDOM.render(carousel, document.getElementById('projectCarousel'));\n        // document.getElementById(\"projectCarousel\").innerHTML = carousel;\n    }, [projectDataList]);\n    \n    return <>\n        <div>\n            {!projectData ? <p>No Data {listItems}</p> : (\n                <>\n                    <div id=\"Featured Projects\">\n\n                        <div id=\"projectCarousel\"></div>\n                        {carousel}\n                    </div>\n                </>\n            )}\n        </div>\n    </>\n\n}","import React, { useState, useEffect, useContext} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport GetProjects from \"../../components/misc/GetProjects\";\nimport ProjectCarouselGuest from '../misc/ProjectCarouselGuest';\n\nfunction Home() {\n\n    const [projectList, setProjectList] = useState();\n        const {userData} = useContext(UserContext);\n        const history = useHistory();\n        let user = \"\";\n        if (localStorage.getItem(\"userData\")){\n            localStorage.getItem(\"userData\") ? user = localStorage.getItem(\"userData\") : user = \"\";\n    \n    }\n\n        useEffect(() => {\n            if(user == \"\") {\n            //     history.push(\"/login\")\n            }\n\n        }, [])\n\n    return (\n        <div>\n        {user == \"\" ? (\n        <>\n        <p>Please Log in to Create a Project</p>\n        <ProjectCarouselGuest status=\"guest\"></ProjectCarouselGuest>\n        <p>Lit</p>\n        </>\n        ) : (\n            <>\n            <p>Hello {JSON.parse(user).fullname}</p>\n\n            <h2>Featured Projects</h2>\n            <div className=\"col-12 col-lg-10 margin0a\">\n                \n            <GetProjects userID={JSON.parse(user).id}/>\n            </div>\n\n            {/* <h2>Your backed Projects</h2>\n            {user.backedProjects} */}\n            </>\n        )\n        }\n        </div>\n     )\n    }\n\n\nexport default Home;\n  ","import React  from \"react\";\n\nexport default function ErrorNotice(props){\n    return <div className={\"alert alert-\"+props.message[1]} role=\"alert\">\n        <span>{props.message[0]}</span>\n        <button className=\"btn\" onClick={props.clearError}>X</button>\n    </div>\n}","import React, {useState, useContext} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from '../misc/ErrorNotice';\n\n\nexport default function Login(){\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n\n    if(userData.user) history.push(\"/\");\n\n    const submit = async (e) => {\n\n        try{\n        e.preventDefault();\n        const loginUser = {email, password};\n        const loginRes = await Axios.post(\"https://tokenstart.herokuapp.com/users/login\", loginUser,\n        {\n            headers: { \"refresh-token\": localStorage.getItem(\"refresh-token\") } \n        }\n        );\n\n        setUserData({\n            token: loginRes.data.token,\n            user: loginRes.data.user,\n        });\n        \n        const userString = JSON.stringify(loginRes.data.user);\n\n        localStorage.setItem(\"auth-token\", loginRes.data.token);\n        localStorage.setItem(\"refresh-token\", loginRes.data.refreshToken);\n        localStorage.setItem(\"userData\", userString);\n\n        history.push(\"/\");\n        } catch (err){\n            err.response.data.msg && setError([err.response.data.msg, \"danger\"])\n        }\n    }\n\n\n\n    return <div>\n          {error && (\n                        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                    )}\n        <h2>Login</h2>\n        <form className=\"col-10 margin0a\" onSubmit={submit}>\n            <label>Email</label>\n            <input id=\"login-email\" type=\"email\" onChange={e => setEmail(e.target.value)}/>\n            <label>Passwort</label>\n            <input id=\"login-password\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n            <input type=\"submit\"></input>\n         </form>\n        </div>\n\n}\n","import React, {useState, useContext} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register(){\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [displayname, setDisplayName] = useState();\n    const [paymentPlan, setPaymentPlan] = useState();\n    const [fullname, setFullName] = useState();\n    const [userDescription, setUserDescription] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    //if(userData.user) history.push(\"/\");\n\n    const submit = async (e) => {\n        e.preventDefault();\n        \n        try {\n        const newUser = {email, password, passwordCheck, displayname, fullname, userDescription};\n        console.log(newUser);\n        \n        await Axios.post(\"https://tokenstart.herokuapp.com/users/register\", newUser);\n        const loginRes = await Axios.post(\"https://tokenstart.herokuapp.com/users/login\", {\n        email,\n        password\n        });\n\n        setUserData({\n            token: loginRes.data.token,\n            user: loginRes.data.user\n        });\n\n        localStorage.setItem(\"auth-token\", loginRes.data.token);\n        history.push(\"/\");\n    \n    } catch(err){\n        err.response.data.msg && setError([err.response.data.msg, \"warning\"])\n    }\n\n}\n\n\n    return <div>\n        <h2>Registrieren</h2>\n        {error && (\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n      )}\n        <form className=\"col-10 margin0a\" onSubmit={submit}>\n            <label>Email</label>\n            <input id=\"register-email\" type=\"email\" onChange={e => setEmail(e.target.value)}/>\n            <label>Passwort</label>\n            <input id=\"register-password\" placeholder=\"Mind. 5 Zeichen\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n            <label>Passwort wiederholen</label>\n            <input id=\"password\" placeholder=\"Passwort wiederholen\" type=\"password\" onChange={e => setPasswordCheck(e.target.value)}/>\n            <label>Display Name</label>\n            <input id=\"register-display-name\" type=\"text\" onChange={e => setDisplayName(e.target.value)}/>\n            <label>User Description</label>\n            <textarea id=\"register-user-description\" style={{width: \"100%\"}} type=\"text\" onChange={e => setUserDescription(e.target.value)} rows=\"3\" />\n            <label>Full Name</label>\n            <input id=\"register-full-name\" placeholder=\"Max Mustermann\" type=\"text\" onChange={e => setFullName(e.target.value)}/>\n\n            <div className=\"card-deck mb-2 text-center\">\n                {paymentPlan != \"pro\" &&\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h5 className=\"card-title pricing-card-title\">Free</h5>\n                        {paymentPlan && \n                            <button className=\"btn btn-md btn-warning\" onClick={e => setPaymentPlan()} >Auswahl zurücksetzen</button>\n                        }\n                    </div>\n                        <div className=\"card-body\">\n                        <h3>0€ <small class=\"text-muted\">/ Monat</small></h3>\n                        <ul className=\"list-unstyled mt-3 mb-4\">\n                            <li>1 user</li>\n                            <li>Get funding for your project</li>\n                            <li>Email support</li>\n                            <li>Help center access</li>\n                        </ul>\n                        <button className=\"btn btn-lg btn-block btn-outline-primary\" value=\"free\" onClick={e => setPaymentPlan(e.target.value)}>Kostenlos registrieren</button>\n                    </div>\n                </div>\n                }\n\n                {paymentPlan != \"free\" &&\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h5 className=\"card-title pricing-card-title\">Pro</h5>\n                        {paymentPlan && \n                            <button className=\"btn btn-md btn-warning\" onClick={e => setPaymentPlan()} >Auswahl zurücksetzen</button>\n                        }\n                    </div>\n                    <div className=\"card-body\">\n                        <h3>10€ <small class=\"text-muted\">/ Monat</small></h3>\n                        <ul className=\"list-unstyled mt-3 mb-4\">\n                            <li>Create an 0rganisation</li>\n                            <li>Top Visibility</li>\n                            <li>Marketing Package</li>\n                            <li>Premium Support</li>\n                        </ul>\n                        <button className=\"btn btn-lg btn-block btn-primary\" value=\"pro\" onClick={e => setPaymentPlan(e.target.value)}>Pro Account anlegen</button>\n                    </div>\n                </div>\n                }\n            </div>\n            <br/>\n            <input className=\"btn btn-primary\"type=\"submit\" value=\"Register\"/>\n         </form>\n    </div>\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport Konstantin from '../../imgs/Founder_Konstantin.png';\nimport Lukas from '../../imgs/Founder_Lukas.jpg';\n\nexport default function About() {\n    return <div className=\"col-11 col-md-9 col-xl-6 margin0a\">\n        <h2>About us</h2>\n        <p>\n            TokenStart is founded by two German students with the vision of opening the world of tokenization\n            to crowdfunding. We utilize the benefits of tokens to create more flexibility and transparency for\n            donators and creators.\n        </p>\n        <div className=\"row col-11 col-md-12 margin0a centerCards\">\n\n            <div className=\"card\">\n                <img class=\"card-img-top founderImg\" src={Konstantin} alt=\"Founder Konstantin\" />\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item founderCard\">\n                        <div>\n                        <h5>Konstantin Klein</h5>\n                        <p>Student at Technical University Darmstadt</p>\n                        <a href=\"https://www.linkedin.com/in/konstantin-klein-b87547178/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n                        </div>                    \n                    </li>\n                </ul>\n            </div>\n\n            <div className=\"card\">\n                <img class=\"card-img-top founderImg\" src={Lukas} alt=\"Founder Konstantin\" />\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item founderCard\">\n                        <div>\n                        <h5>Lukas Sonnabend</h5>\n                        <p>Student at Darmstadt University of Applied Sciences</p>\n                        <a href=\"https://www.linkedin.com/in/lukas-sonnabend-8b1323105/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n                        </div>                    \n                    </li>\n                </ul>\n            </div>\n\n            \n            \n\n\n        </div>\n        \n\n\n\n\n\n\n    </div>\n}\n","import React, {useEffect, useState, useContext} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Account(){\n\n    const {userData} = useContext(UserContext);\n    const [password, setPassword] = useState();\n    const [userDescription, setUserDescription] = useState();\n    const [error, setError] = useState();\n    \n    const token = userData.token;\n\n    const history = useHistory();\n    // let user = userData.user;\n    let user = undefined;\n    localStorage.getItem(\"userData\").length > 0 ? user = JSON.parse(localStorage.getItem(\"userData\")) : user = \"\";\n\n\n\n\n    useEffect(() => {\n        console.log(userData)\n        if(user === \"\") history.push(\"/login\");\n\n        async function validateRefreshToken(){\n        const accessToken = await Axios.post(\"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\",{},\n        {\n            headers: { \"refresh-token\": localStorage.getItem(\"refresh-token\") } \n        })\n    //     if(accessToken === undefined) history.push(\"/login\")\n        console.log(accessToken)\n\n\n}    \n    \n    validateRefreshToken()\n\n}, [])\n\n    \n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n            const updateUser = {\n                password: password,\n                userDescription: userDescription\n            \n            };\n            const accessToken = await Axios.post(\"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\",{},\n            {\n                headers: { \n                    \"refresh-token\": localStorage.getItem(\"refresh-token\")\n                } \n            })\n            //console.log(accessToken)\n            \n            localStorage.setItem(\"auth-token\", accessToken.data.AccessToken)\n            console.log(accessToken.data.AccessToken);\n\n            const updateUserFunc = await Axios.post(\"https://tokenstart.herokuapp.com/users/update\", updateUser,\n            {\n                headers: { \"auth-token\": localStorage.getItem(\"auth-token\") } \n            }\n            );\n\n            updateUserFunc.data.msg && setError([updateUserFunc.data.msg, \"success\"])\n\n        } catch (err) {\n            err.response.data.msg && setError([err.response.data.msg, \"warning\"])\n        }\n    }\n\n    return <div>\n        {user == undefined ? <p>Please Log in </p> : (\n            <>\n                <h2>Account: {user.fullname}</h2>\n                {error && (\n                        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                    )}\n                <form className=\"col-10 margin0a\" onSubmit={submit}>\n                    <label>Display Name</label>\n                    <input id=\"update-display-name\" value={user.displayname} type=\"text\"/>\n                    <label>User Bio</label>\n                    <textarea className=\"w-100\" id=\"update-user-description\" placeholder={user.userDescription} cols=\"25\" type=\"text\" onChange={e => setUserDescription(e.target.value)}/>\n                    <label>Full Name</label>\n                    <input id=\"update-full-name\" value={user.fullname} type=\"text\"/>\n                    <label>Email</label>\n                    <input id=\"update-email\" value={user.email} type=\"email\"/>\n                    <label>Passwort</label>\n                    <input id=\"update-password\" type=\"password\" placeholder=\"*****\" onChange={e => setPassword(e.target.value)}/>\n                    <input type=\"submit\"></input>\n                </form>\n            </>\n        )\n        }\n        </div>\n\n\n\n}\n","import React from 'react';\n\nexport default function ProgressBar(props) {\n\n    const circulating = (props.tokenData.toOwner * 100) / props.tokenData.tokenSupply\n    \n    return <div className=\"d-none d-sm-block\">\n        <div className=\"mt-2 mb-2 col-10 margin0a\" style={{ background: \"grey\", display: \"grid\", padding: 0, gridTemplateColumns: circulating.toString(10) + \"% auto\" }}>\n            <div className=\"progress-bar\" style={{ width: \"100%\" }}>Circulating Supply</div>\n        Held by Owner\n    </div>\n    </div>\n\n}","import React, { useState, useEffect, useContext } from 'react';\nimport Axios from \"axios\";\nimport ErrorNotice from '../misc/ErrorNotice';\nimport UserContext from \"../../context/UserContext\";\nimport ProgressBar from '../misc/ProgressBar';\nimport ProjectCarouselGuest from '../misc/ProjectCarouselGuest';\nimport { BrowserRouter, RouteLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport ChainIcons from \"../misc/chainIcon\";\n\n\n\nexport default function Project(props) {\n    const { userData } = useContext(UserContext);\n    const [projectInfo, setProjectInfo] = useState();\n\n    let editLink = \"\";\n\n    useEffect(() => {\n        if (!Project._id) {\n            getProjects();\n        }\n\n\n    }, [props.match.params.projectId]);\n\n    async function getProjects() {\n        const projectRes = await Axios.post(\"https://tokenstart.herokuapp.com/projects/\" + props.match.params.projectId)\n        setProjectInfo({\n            Project: projectRes.data\n        });\n\n    }\n\n    if (projectInfo && userData.user) {\n        if (projectInfo[\"Project\"].projectOwnerID == userData.user.id) {\n            editLink = <Link to={\"/edit/project/\" + props.match.params.projectId}><button className=\"btn btn-warning\"><FontAwesomeIcon icon={faEdit} /> Edit project</button></Link>;\n        }\n    }\n\n\n    return <div>\n        {projectInfo === undefined ? (<p>Please Log in </p>) : (\n            <>\n                {/* { userData.user.id == projectInfo._id  && <Link to={\"/edit/project/\" + props.match.params.projectId}>Edit project</Link> } */}\n\n                <div className=\"editLink\">{editLink}</div>\n\n                {/* <div className=\"col-6\">\n                    <Link to=\"/projects\"> Go to projects overview</Link>\n                </div> */}\n\n\n\n                <div id=\"carouselExampleControls\" className=\"carousel slide col-12 col-md-5 col-lg-4 margin0a p-2\" data-ride=\"carousel\">\n                    <div className=\"carousel-inner\">\n\n\n                        {!projectInfo.Project.projectPictureURL &&\n\n                            <>\n                                <div className=\"carousel-item active\">\n                                    <div className=\"container\">\n                                        <img height=\"315\" src=\"https://images.unsplash.com/photo-1580670029149-5c00eec8bb66?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=560&q=80\" alt=\"...\" />\n                                    </div>\n                                </div>\n                                <div className=\"carousel-item\">\n                                    <div className=\"container\">\n                                        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0ZrzQYzWq68\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                                    </div>\n                                </div>\n                                <div className=\"carousel-item\">\n                                    <div className=\"container\">\n                                        <img height=\"315\" src=\"https://images.unsplash.com/photo-1549070419-1a0fb71f1302?ixlib=rb-1.2.1&auto=format&fit=crop&w=560&q=80\" alt=\"...\" />\n                                    </div>\n                                </div>\n                            </>\n                        }\n\n                        {projectInfo.Project.projectPictureURL &&\n\n                            <>\n                                <div className=\"carousel-item active\">\n                                    <div className=\"container\">\n                                        <img classname=\"col-12 col-md-6 margin0a\" width=\"100%\" src={projectInfo.Project.projectPictureURL} alt=\"...\" />\n                                    </div>\n                                </div>\n                            </>\n                        }\n\n\n                    </div>\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Previous</span>\n                    </a>\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Next</span>\n                    </a>\n                </div>\n\n                <ProgressBar tokenData={projectInfo.Project} />\n\n\n                <div className=\"row projectAction\">\n                    <div className=\"horizontalCard col-10 col-md-5 margin0a\">\n                        <div className=\"horizontalCardLeftProject\">\n                            <div className=\"tokenModel1\">\n\n                                {ChainIcons(projectInfo.Project.tokenChain)}\n                            </div>\n\n                        </div>\n                        <div className=\"text-left horizontalCardRightProject pl-2\">\n                            <div className=\"mt-2\">\n                                <p>{projectInfo.Project.projectName} <span style={{ fontWeight: \"bold\" }}>{projectInfo.Project.tokenShort}</span></p>\n                                <p className=\"mb-0\">{projectInfo.Project.sDescription}</p>\n                                <span>\n                                    <p className=\"noMargin\">Token Supply: {projectInfo.Project.tokenSupply}</p>\n                                    <p className=\"noMargin\">Creation Date: {projectInfo.Project.date.slice(0, 10)}</p>\n                                    <p className=\"noMargin\">Funding Deadline: 2020-25-01</p>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-10 col-md-4\">\n                        <h2>Project overview</h2>\n                        <table className=\"table table-bordered margin0a mb-4\">\n\n                            <tr>\n                                <th>Available supply</th>\n                                <td>{projectInfo.Project.tokenSupply - projectInfo.Project.toOwner}</td>\n                            </tr>\n                            <tr>\n                                <th>Project start</th>\n                                <td>{projectInfo.Project.date.slice(0, 10)}</td>\n                            </tr>\n                            <tr>\n                                <th>Token price</th>\n                                <td>50$</td>\n                            </tr>\n                        </table>\n                        <Link to={{\n                            pathname: '/checkout',\n                            projectProps: {\n                                project: projectInfo.Project\n                            }\n                        }} className=\"btn btn-primary\">Buy Token</Link>\n                    </div>\n\n                </div>\n\n                <div className=\"mb-2\">\n                    <h2>Project description</h2>\n                    <p className=\"col-10 col-md-10 margin0a mb-3\">\n                        {projectInfo.Project.lDescription}\n                    </p>\n                </div>\n                <div className=\"row col-md-11 margin0a mb-3\">\n                    <div className=\"mb-2\">\n                        <h4>About the creator {projectInfo.Project.projectOwnerName}</h4>\n                        <p className=\"col-10 col-md-11 margin0a mb-3 textJustify\">\n                            {projectInfo.Project.projectOwnerDescription}\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    <h2>Suggested projects for you</h2>\n                    <ProjectCarouselGuest></ProjectCarouselGuest>\n                </div>\n            </>\n\n        )\n        }\n\n\n    </div >\n\n\n\n\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ImageUploader from 'react-images-upload';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function EditProject(props) {\n    const [projectName, setProjectName] = useState();\n    const [tokenChain, setTokenChain] = useState();\n    const [shortDescription, setShortDescription] = useState();\n    const [longDescription, setLongDescription] = useState();\n    const [tokenName, setTokenName] = useState();\n    const [tokenShort, setTokenShort] = useState();\n    const [tokenSupply, setTokenSupply] = useState(\"Token Supply\");\n    const [smallestTradable, setSmallestTradable] = useState();\n    const [pictures, setPictures] = useState([]);\n    const [toOwner, setToOwner] = useState();\n    const [tokenOwner, setTokenOwner] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    let user = undefined;\n    localStorage.getItem(\"userData\").length > 0 ? user = localStorage.getItem(\"userData\") : user = \"\";\n\n\n    const onDrop = (e, picture) => {\n        console.log(e)\n        console.log(picture)\n        setPictures([...pictures, picture]);\n    };\n\n    function setSelection(chain) {\n        // 0 are selected\n\n        var selectedChain = document.getElementsByClassName(\"selected\");\n\n        if (selectedChain.length !== 0) {\n            document.getElementById(selectedChain[0].id).classList.remove(\"selected\");\n            document.getElementById(chain).classList.add(\"selected\");\n            setTokenChain(chain);\n\n        } else {\n            document.getElementById(chain).classList.add(\"selected\");\n            setTokenChain(chain);\n        }\n    }\n\n    useEffect(() => {\n        if (user == undefined) history.push(\"/login\")\n\n        if (pictures.length > 0) document.getElementById(\"imgViewer\").src = pictures[0]\n\n        async function getProjects() {\n            const projectRes = await Axios.post(\"https://tokenstart.herokuapp.com/projects/\" + props.match.params.projectId)\n            setProjectName(projectRes.data.projectName);\n            setPictures(projectRes.data.picture)\n            setTokenChain(projectRes.data.tokenChain);\n            setShortDescription(projectRes.data.sDescription);\n            setLongDescription(projectRes.data.lDescription);\n            setTokenName(projectRes.data.tokenName);\n            setTokenShort(projectRes.data.tokenShort);\n            setTokenSupply(projectRes.data.tokenSupply);\n            setSmallestTradable(projectRes.data.smallestTradable);\n            setToOwner(projectRes.data.toOwner);\n            setTokenOwner(projectRes.data.projectOwnerName);\n\n\n            document.getElementById(projectRes.data.tokenChain).classList.add(\"selected\");\n\n            if (!userData.user) {\n                return history.push(\"/404\")\n            }\n\n        }\n\n        getProjects();\n        console.log(userData)\n\n\n\n\n        //document.getElementById(tokenChain).classList.add(\"selected\");       \n\n    }, [user]);\n\n\n    const deleteProject = async (e) => {\n        try {\n            const toDeleteProject = {\n                projectId: props.match.params.projectId,\n                projectOwnerID: userData.user.id,\n\n            };\n\n            const accessToken = await Axios.post(\"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\", {},\n                {\n                    headers: {\n                        \"refresh-token\": localStorage.getItem(\"refresh-token\")\n                    }\n                })\n\n            localStorage.setItem(\"auth-token\", accessToken.data.AccessToken)\n\n            const deleteProject = await Axios.post(\"https://tokenstart.herokuapp.com/projects/delete\", toDeleteProject,\n                {\n                    headers: { \"auth-token\": localStorage.getItem(\"auth-token\") }\n                }\n            );\n\n            deleteProject.data.msg && setError([deleteProject.data.msg, \"success\"])\n\n            history.push(\"/\");\n\n        } catch (err) {\n            //err.response.data.msg && setError([err.response.data.msg, \"warning\"])\n        }\n    }\n\n\n\n\n\n\n\n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n            if (!userData){\n                return setError([{msg: \"Please set User Bio in Account Settings\"}, \"warning\"])\n            }\n            const projectTemplate = {\n                projectId: props.match.params.projectId,\n                projectName: projectName,\n                picture: pictures,\n                tokenChain: tokenChain,\n                sDescription: shortDescription,\n                lDescription: longDescription,\n                // tokenName: tokenName,\n                // tokenShort: tokenShort,\n                // tokenSupply: tokenSupply,\n                // smallestTradable: smallestTradable,\n                // toOwner: toOwner,\n                projectOwnerName: userData.user.displayname,\n                projectOwnerDescription: userData.user.userDescription,\n                projectOwnerID: userData.user.id,\n\n            };\n\n            console.log(projectTemplate)\n\n            const accessToken = await Axios.post(\"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\", {},\n                {\n                    headers: {\n                        \"refresh-token\": localStorage.getItem(\"refresh-token\")\n                    }\n                })\n            localStorage.setItem(\"auth-token\", accessToken.data.AccessToken)\n\n\n            const editedProject = await Axios.post(\"https://tokenstart.herokuapp.com/projects/update\", projectTemplate,\n                {\n                    headers: { \"auth-token\": localStorage.getItem(\"auth-token\") }\n                }\n            );\n\n            editedProject.data.msg && setError([editedProject.data.msg, \"success\"])\n            history.push(\"/project/\" + props.match.params.projectId);\n\n        } catch (err) {\n            console.log(\"this is error: \" + err)\n            //err.response.data.msg && setError([err.response.data.msg, \"warning\"])\n        }\n    }\n    return <div>\n        {user == undefined ? <p>Please Log in </p> :\n            (<>\n                <h2>Edit Token</h2>\n                <form className=\"col-10 margin0a\" onSubmit={submit}>\n                    <div className=\"card\">\n                        <label>Project name</label>\n                        <input id=\"new-ProjectName\" value={projectName} type=\"text\" placeholder='z.B. \"AI Roboterarm\"' onChange={e => setProjectName(e.target.value)} />\n\n                        {/* {pictures.length < 1 &&\n                            <ImageUploader\n                                withIcon={true}\n                                singleImage={true}\n                                onChange={onDrop}\n                                imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                                maxFileSize={5242880}\n                            />\n                        } */}\n\n                       \n                            <>\n                                <div>\n                                    <button className=\"btn btn-danger\" onClick={() => setPictures([])}>X</button>\n                                    <div>\n                                        <img id=\"imgViewer\" />\n                                    </div>\n                                </div>\n                            </>\n                        \n\n                        <div className=\"card-deck\">\n                            <div id=\"Ethereum\" className=\"card cryptoCard\">\n                                <div className=\"cryptoCardImg\">\n                                    <img className=\"card-img-top\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Ethereum_logo.svg\" alt=\"Card image cap\" />\n                                </div>\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Ethereum</h5>\n                                    <button className=\"btn btn-primary\" value=\"Ethereum\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"TRON\" className=\"card cryptoCard\">\n                                <div className=\"cryptoCardImg\">\n                                    <img className=\"card-img-top\" src=\"https://banner2.cleanpng.com/20180824/vuw/kisspng-cryptocurrency-blockchain-tron-logo-ethereum-top-2-ethereum-tokens-to-invest-in-bit-world-5b7f9cbfb1e3f4.7066100315350898557287.jpg\" alt=\"Card image cap\" />\n                                </div>\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">TRON</h5>\n                                    <button className=\"btn btn-primary\" value=\"TRON\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"EOS\" className=\"card cryptoCard\">\n                                <img className=\"card-img-top cryptoCardImg\" src=\"https://ethereum-balance.de/img/token/eos_1.png\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">EOS</h5>\n                                    <button className=\"btn btn-primary\" value=\"EOS\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"Polkadot\" className=\"card cryptoCard\">\n                                <img className=\"card-img-top cryptoCardImg\" src=\"https://polkadot.network/content/images/2019/05/Polkadot_symbol_color.png\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Polkadot</h5>\n                                    <button className=\"btn btn-primary\" value=\"Polkadot\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                        {/* <label for=\"exampleFormControlSelect1\">Blockchain</label>\n                        <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={e => setTokenChain(e.target.value)}>\n                            <option>Bitcoin</option>\n                            <option>Ethereum</option>\n                            <option>Ripple</option>\n                            <option>Solidity</option>\n                            <option>EOS.IO</option>\n                            <option>Tezos</option>\n                        </select> */}\n\n\n                        <label>Short description</label>\n                        <input id=\"new-ShortDescription\" value={shortDescription} type=\"text\" placeholder='z.B. \"Anteilstoken für Roboterarm\"' onChange={e => setShortDescription(e.target.value)} />\n                        <label>Project description</label>\n                        <textarea id=\"new-LongDescription\" value={longDescription} type=\"text\" onChange={e => setLongDescription(e.target.value)} rows=\"3\" />\n                        <label>Project owner</label>\n                        <input id=\"new-ProjektOwner\" type=\"text\" value={tokenOwner} disabled />\n                    </div>\n                    <div className=\"card\">\n                        <label>Token name</label>\n                        <input id=\"new-TokenName\" value={tokenName} type=\"text\" disabled />\n                        <label>Token shortcut</label>\n                        <input className=\"is-invalid\" value={tokenShort} id=\"new-TokenShort\" placeholder=\"Max. 3 Zeichen\" type=\"text\" onChange={e => setTokenShort(e.target.value)} disabled />\n                        <label>Total token amount</label>\n                        <input id=\"new-TokenSupply\" value={tokenSupply} type=\"number\" disabled />\n                        <label>Individual minimum contribution</label>\n                        <input id=\"new-smallestTradable\" value={smallestTradable} type=\"number\" disabled />\n                        <label>Tokens owned by creator</label>\n                        <input id=\"new-toOwner\" value={toOwner} placeholder={\"Max. \" + tokenSupply} type=\"number\" disabled />\n                    </div>\n                    {error && (\n                        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                    )}\n                    <div className=\"row\">\n                        <input className=\"btn btn-primary\" type=\"submit\" onClick={() => submit()} value=\"Edit Project\" />\n                    </div>\n                </form>\n                <button className=\"btn btn-danger\" type=\"submit\" onClick={() => deleteProject()}>Delete Project</button>\n            </>\n            )\n        }\n    </div>\n}","import React from 'react';\n\n\nexport default function Goal() {\n    return <div className=\"col-12 col-md-12 col-xl-8 margin0a\">\n        <h2>Our Goal</h2>\n        <p>\n            We at TokenStart aim at making the crowdfunding process more transparent and flexible for\n            creators and donators.\n            Project creators give out tokens to their donators. These tokens can offer rewards like future\n            product claims.\n            Token holders can trade their token, buying additional token for more products or selling their\n            tokens if they are not interested in the project anymore.\n            Tokens with no reward show the donators support of a project. If held on a private public key\n            donators can publicly disclose their support for a project. This incentivizes donators to participate in\n            projects with a good cause.\n        </p>\n        <div className=\"row col-12 col-md-12 margin0a\">\n            <ol>\n                <li>\n                    Platform: Provide an easy to use platform to connect creators and donators in the best way\n                    possible.\n            </li>\n            <br/>\n                <li>\n                    Tokenization: Creators give token to donators based on predetermined ratios. These Tokens can\n                    represent claims for products or might not have any value.\n            </li>\n            <br/>\n                <li>\n                    Different blockchain protocols: We offer token creation on multiple different blockchain protocols\n                    like Ethereum, Polkadot, Tron.\n            </li>\n            <br/>\n                <li>\n                    Payment methods: Donators can choose to pay using FIAT or cryptocurrency.\n            </li>\n            <br/>\n                <li>\n                    Costs: Creators will only be charged if the project is successfully financed.\n            </li>\n            </ol>\n        </div>\n    </div>\n}\n","import React, {useContext} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\n\nexport default function AuthOptions(){\n    //Destructure userContext Object\n    const {userData, setUserData} = useContext(UserContext);\n\n    const history = useHistory();\n\n    //const register = () => history.push(\"/register\")\n    //const login = () => history.push(\"/login\")\n    const accSettings = () => history.push(\"/account\")\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        Axios.post(\"https://tokenstart.herokuapp.com/users/logout\", {}, \n        {\n            headers: { \"refresh-token\": localStorage.getItem(\"refresh-token\") } \n        })\n\n\n        localStorage.setItem(\"auth-token\", \"\");\n        localStorage.setItem(\"refresh-token\", \"\");\n        localStorage.setItem(\"userData\", \"\");\n\n\n    }\n\n    return (\n        <div>\n            {\n                userData.user ? (\n                <>\n                <button className=\"btn btn-danger mr-2\" onClick={logout}><FontAwesomeIcon icon={faSignOutAlt} /></button>\n                <button className=\"btn btn-info\" onClick={accSettings}><FontAwesomeIcon icon={faUserCircle} /></button>\n                </>\n                ) :\n                (\n                <> \n                {/* <Link to=\"/register\"><button className=\"btn btn-info\" onClick={register}>Register</button></Link> */}\n                    <Link to=\"/register\"><button className=\"btn btn-info\">Register</button></Link>\n                    {/* <button className=\"btn btn-primary\" onClick={login}>Login</button> */}\n                    <Link to=\"/login\"><button className=\"btn btn-primary\">Login</button></Link>\n                </>\n                )\n            }   \n\n\n        </div>\n\n    )\n\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ChainIcons from \"./chainIcon\";\nimport Axios from \"axios\";\n\n\nexport default function GetProjects() {\n\n    const [searchTerm, SetSearchTerm] = useState();\n    const [resultList, setResultList] = useState();\n    const [showSearch, setShowSearch] = useState();\n    const history = useHistory();\n\n    //https://levelup.gitconnected.com/building-a-simple-dynamic-search-bar-in-react-js-f1659d64dfae\n\n    const goToProject = id => {\n        setShowSearch(false);\n        SetSearchTerm(undefined);\n        console.log(document.getElementById(\"searchField\").value = '');\n        history.push(\"/project/\" + id);\n\n    }\n\n    useEffect(() => {\n\n        //get project names + ids\n\n        async function getProjects() {\n            const projectRes = await Axios.get(\"https://tokenstart.herokuapp.com/projects/\")\n            let allProjectsList = projectRes.data;\n\n\n            setResultList({\n                matchingProjects: allProjectsList.filter(project => project[\"projectName\"].toLowerCase().includes(searchTerm.toLowerCase())),\n            });\n\n        }\n\n        if (searchTerm) {\n            setShowSearch(true);\n            getProjects();\n        }\n\n    }, [searchTerm]);\n\n    return <div className=\"mb-0\" >\n\n         { showSearch &&<div className=\"focusCatch\" onClick={(e) => setShowSearch(false)}>\n        LIt\n        </div>}\n\n        <input id=\"searchField\" className=\"searchField mb-0\" type=\"text\" placeholder=\"Search TokenStart Projects\" onChange={(e) => SetSearchTerm(e.target.value)} />\n        <div className=\"col-12 searchResults position-absolute\">\n            <ul className=\"my-0\">\n                { showSearch &&\n                resultList !== undefined &&\n\n                    resultList.matchingProjects.map(\n                        (item, i) =>\n                            <>\n                                <li onClick={ () => goToProject(item._id)}>\n                                    <div key={i} className=\"d-flex\">\n                                        <div className=\"col-3\">\n                                            {ChainIcons(item.tokenChain)}\n                                        </div>\n                                        <div className=\"col-9\">\n                                            <p className=\"my-1\">{item.projectName} <span style={{ fontWeight: \"bold\" }}>[{item.tokenShort}]</span></p>\n                                            <p className=\"my-1\">Created by {item.projectOwnerName}</p>\n                                            <small className=\"noMargin\">{item.date.slice(0, 10)}</small>\n                                        </div>\n                                    </div>\n                                </li>\n                            </>\n                    )\n\n                \n                }\n            </ul>\n        </div>\n    </div>\n\n}","import React, { useState, useContext } from 'react';\nimport AuthOptions from '../auth/authOptions.js';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport ProjectSearch from \"../../components/misc/ProjectSearch\";\n\n\n// export function NavBar() {\n//   const [searchInput, setSearchInput] = useState();\n\n//   return (\n//     <div>\n//       <div className=\"alert alert-warning\" role=\"alert\">\n//         Currently under construction\n//       </div>\n//       <nav className=\"navbar bg-light .justify-content-center\">\n//         <a href=\"/\"><p><span>T</span>oken<span>S</span>tart</p></a>\n//       </nav>\n\n//       <nav className=\"navbar navbar-expand navbar-light bg-light\">\n\n//         <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n//           <ul className=\"navbar-nav w-100\">\n//             <li className=\"nav-item active\">\n//             <Link to=\"/projects\"><button className=\"btn btn-primary\"> Go to projects overview</button></Link> \n//             <Link to=\"/projects/new\"><button className=\"btn btn-primary\">Start project</button></Link>  \n//             </li>\n//             {/* <li className=\"nav-item ml-auto\">\n//                 <a className=\"nav-link\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">🔍</a>\n//             </li> */}\n//             <input placeholder=\"Search for tokens\" onChange={e => setSearchInput(e.target.value)} />\n//             <li className=\"nav-item\">\n//               <AuthOptions />\n//             </li>\n//           </ul>\n//         </div>\n//       </nav>\n//     </div>\n//   )\n// }\n\n\nexport function NavBar() {\n  const [searchInput, setSearchInput] = useState();\n\n  return (\n    <div>\n      <div className=\"alert alert-warning\" role=\"alert\">\n        Currently under construction\n        </div>\n      <nav className=\"navbar bg-light .justify-content-center\">\n        <a href=\"/\"><p><span>T</span>oken<span>S</span>tart</p></a>\n      </nav>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"d-block d-sm-none\">\n          <AuthOptions />\n        </div>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n          {/* Mobile Navigation */}\n          <div className=\"d-block d-sm-none\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/projects/new\" className=\"nav-link text-dark\">Start project</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/projects\" className=\"nav-link text-dark\">Projects overview</Link>\n              </li>\n            </ul>        <form className=\"form-inline my-2 my-lg-0\">\n              <li style={{ listStyle: \"none\" }} className=\"nav-item\">\n                <ProjectSearch />\n              </li>\n            </form>\n\n          </div>\n\n          {/* Desktop Navigation */}\n          <div id=\"desktopNavigationBar\" className=\"col-12 d-none d-sm-block\">\n            <ul className=\"nav navbar-nav pull-sm-left\">\n              <li className=\"nav-item\">\n                <Link to=\"/projects/new\" className=\"nav-link text-dark\"><button className=\"btn btn-outline-dark\">Start project</button></Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/projects\" className=\"nav-link text-dark\"><button className=\"btn btn-outline-dark\">Projects overview</button></Link>\n              </li>\n            </ul>\n            <ul className=\"nav navbar-nav\">\n              <form className=\"form-inline my-2 my-lg-0\">\n                <li className=\"nav-item desktopSearch\">\n                  <ProjectSearch />\n                </li>\n              </form>\n            </ul>\n            <ul className=\"nav navbar-nav ml-auto\">\n              <form className=\"form-inline my-2 my-lg-0\">\n                <li style={{ listStyle: \"none\" }} className=\"nav-item\">\n                  <AuthOptions />\n                </li>\n              </form>\n            </ul>\n          </div>\n\n\n\n        </div>\n      </nav>\n\n    </div>\n  )\n}\n\n\n\nexport function Footer() {\n\n  const history = useHistory();\n\n  const about = () => history.push(\"/about\")\n\n  return <div className=\"footer\">\n\n    <footer className=\"page-footer font-small indigo\">\n\n\n      <div className=\"container text-center text-md-left\">\n\n\n        <div className=\"row\">\n\n\n          <div className=\"col-md-3 mx-auto\">\n\n\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">ÜBER UNS</h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <Link to=\"about\">About us</Link>\n              </li>\n              <li>\n                <Link to=\"ourgoal\">Our goal</Link>\n              </li>\n              <li>\n                <a href=\"#!\">Statistics</a>\n              </li>\n              <li>\n                <a href=\"#!\">Press</a>\n              </li>\n            </ul>\n\n          </div>\n\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n\n          <div className=\"col-md-3 mx-auto\">\n\n\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Support</h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">FAQs</a>\n              </li>\n              <li>\n                <a href=\"#!\">Help Center</a>\n              </li>\n              <li>\n                <a href=\"#!\">Help for project owners</a>\n              </li>\n              <li>\n                <a href=\"#!\">Help for donators</a>\n              </li>\n            </ul>\n\n          </div>\n\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n          <div className=\"col-md-3 mx-auto\">\n\n\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">More from TokenStart</h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Newsletter</a>\n              </li>\n              <li>\n                <a href=\"#!\">Social Media</a>\n              </li>\n            </ul>\n\n          </div>\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n\n        </div>\n\n\n      </div>\n\n      <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n    <a href=\"https://tokenstart.io/\"> tokenstart.io</a>\n      </div>\n\n\n    </footer>\n  </div>\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ImageUploader from 'react-images-upload';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function CreateProject() {\n    const [projectName, setProjectName] = useState();\n    const [tokenChain, setTokenChain] = useState();\n    const [shortDescription, setShortDescription] = useState();\n    const [longDescription, setLongDescription] = useState();\n    const [tokenName, setTokenName] = useState();\n    const [tokenShort, setTokenShort] = useState();\n    const [tokenSupply, setTokenSupply] = useState(\"Token Supply\");\n    const [smallestTradable, setSmallestTradable] = useState();\n    const [pictures, setPictures] = useState([]);\n    const [toOwner, setToOwner] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    let user = \"\";\n    localStorage.getItem(\"userData\") ? user = localStorage.getItem(\"userData\") : user = \"\";\n\n    useEffect(() => {\n        if (user == \"\") history.push(\"/login\")\n\n\n        if (pictures.length > 0) document.getElementById(\"imgViewer\").src = pictures[0]\n\n    }, [pictures])\n\n    const onDrop = (e, picture) => {\n        // console.log(e)\n        // console.log(picture)\n        setPictures([...pictures, picture]);\n    };\n\n\n    function setSelection(chain) {\n        // 0 are selected\n\n        var selectedChain = document.getElementsByClassName(\"selected\");\n\n        if (selectedChain.length !== 0) {\n            document.getElementById(selectedChain[0].id).classList.remove(\"selected\");\n            document.getElementById(chain).classList.add(\"selected\");\n            setTokenChain(chain);\n\n        } else {\n            document.getElementById(chain).classList.add(\"selected\");\n            setTokenChain(chain);\n        }\n\n    }\n\n\n    //user = userData.user;\n    let imgUrl\n\n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n            const newProject = {\n                projectName: projectName,\n                projectPicture: pictures[0],\n                tokenChain: tokenChain,\n                sDescription: shortDescription,\n                lDescription: longDescription,\n                tokenName: tokenName,\n                tokenShort: tokenShort,\n                tokenSupply: tokenSupply,\n                smallestTradable: smallestTradable,\n                toOwner: toOwner,\n                projectOwnerName: userData.user.displayname,\n                projectOwnerDescription: userData.user.userDescription,\n                projectOwnerID: userData.user.id,\n\n            };\n\n            console.log(newProject)\n\n            const accessToken = await Axios.post(\"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\", {},\n                {\n                    headers: {\n                        \"refresh-token\": localStorage.getItem(\"refresh-token\")\n                    }\n                })\n            localStorage.setItem(\"auth-token\", accessToken.data.AccessToken)\n\n\n            const createNewProject = await Axios.post(\"https://tokenstart.herokuapp.com/projects/new\", newProject,\n                {\n                    headers: { \"auth-token\": localStorage.getItem(\"auth-token\") }\n                }\n            );\n\n            createNewProject.data.msg && setError([createNewProject.data.msg, \"success\"])\n            history.push(\"/\");\n\n        } catch (err) {\n            err.response.data.msg && setError([err.response.data.msg, \"warning\"])\n        }\n    }\n    return <div>\n        {user == \"\" ? <p>Please Log in </p> :\n            (<>\n                <h2>Create new token</h2>\n                <form className=\"col-10 margin0a\" onSubmit={submit}>\n                    <div className=\"card\">\n                        <label>Project name</label>\n                        <input id=\"new-ProjectName\" type=\"text\" placeholder='e.g. Community project\"' onChange={e => setProjectName(e.target.value)} />\n\n                        {pictures.length < 1 &&\n                            <ImageUploader\n                                withIcon={true}\n                                singleImage={true}\n                                onChange={onDrop}\n                                label=\"Max file size: 5mb, accepted: jpg|gif|png\"\n                                imgExtension={[\".jpg\", \".gif\", \".png\"]}\n                                maxFileSize={5242880}\n                            />\n                        }\n\n                        {pictures.length > 0 &&\n                        <>\n                            <div>\n                            <button className=\"btn btn-danger\" onClick={ () => setPictures([])}>X</button>\n                            <div>\n                                <img id=\"imgViewer\" />\n                            </div>\n                            </div>\n                        </>\n\n                        }\n\n\n\n\n\n                        <div className=\"card-deck\">\n                            <div id=\"Ethereum\" className=\"card cryptoCard\">\n                                    <img className=\"card-img-top cryptoCardImg\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Ethereum_logo.svg\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Ethereum</h5>\n                                    <button className=\"btn btn-primary\" value=\"Ethereum\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"TRON\" className=\"card cryptoCard\">\n                                    <img className=\"card-img-top cryptoCardImg\" src=\"https://banner2.cleanpng.com/20180824/vuw/kisspng-cryptocurrency-blockchain-tron-logo-ethereum-top-2-ethereum-tokens-to-invest-in-bit-world-5b7f9cbfb1e3f4.7066100315350898557287.jpg\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">TRON</h5>\n                                    <button className=\"btn btn-primary\" value=\"TRON\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"EOS\" className=\"card cryptoCard\">\n                                <img className=\"card-img-top cryptoCardImg\" src=\"https://ethereum-balance.de/img/token/eos_1.png\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">EOS</h5>\n                                    <button className=\"btn btn-primary\" value=\"EOS\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                            <div id=\"Polkadot\" className=\"card cryptoCard\">\n                                <img className=\"card-img-top cryptoCardImg\" src=\"https://polkadot.network/content/images/2019/05/Polkadot_symbol_color.png\" alt=\"Card image cap\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Polkadot</h5>\n                                    <button className=\"btn btn-primary\" value=\"Polkadot\" onClick={e => {\n                                        e.preventDefault();\n                                        setSelection(e.target.value);\n                                    }\n                                    }>wählen</button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <label>Short description</label>\n                        <input id=\"new-ShortDescription\" type=\"text\" placeholder='z.B. \"Cleaning of community gardens\"' onChange={e => setShortDescription(e.target.value)} />\n                        <label>Project description</label>\n                        <textarea id=\"new-LongDescription\" type=\"text\" onChange={e => setLongDescription(e.target.value)} rows=\"3\" />\n                        <label>Project owner</label>\n                        <input id=\"new-ProjektOwner\" type=\"text\" value={JSON.parse(user).displayname} disabled />\n                    </div>\n                    <div className=\"card\">\n                        <label>Token name</label>\n                        <input id=\"new-TokenName\" type=\"text\" onChange={e => setTokenName(e.target.value)} />\n                        <label>Token shortcut</label>\n                        <input className=\"is-invalid\" id=\"new-TokenShort\" placeholder=\"Max. 3 signs\" type=\"text\" onChange={e => setTokenShort(e.target.value)} />\n                        <label>Total token amount</label>\n                        <input id=\"new-TokenSupply\" type=\"number\" onChange={e => setTokenSupply(parseInt(e.target.value))} />\n                        <label>Individual minimum contribution</label>\n                        <input id=\"new-smallestTradable\" step=\".01\" type=\"number\" onChange={e => setSmallestTradable(parseInt(e.target.value))} />\n                        <label>Tokens owned by creator</label>\n                        <input id=\"new-toOwner\" placeholder={\"Max. \" + tokenSupply} type=\"number\" onChange={e => setToOwner(parseInt(e.target.value))} />\n                    </div>\n                    {error && (\n                        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                    )}\n                    <input className=\"btn btn-primary\" type=\"submit\" value=\"Projekt erstellen\" />\n                </form>\n            </>\n            )\n        }\n    </div>\n}","import React from 'react';\n\n\nexport default function FourOFour() {\n    return <div className=\"col-12 col-md-12 col-xl-8 margin0a\">\n        <h1>Error Page</h1>\n        <img height=\"200\" src=\"https://image.freepik.com/free-vector/cute-dinosaur-butterfly_37741-658.jpg\"></img>\n    </div>\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport ChainIcons from \"../misc/chainIcon\";\n\nexport default function ProjectsOverview() {\n\n    const [projectList, setProjectList] = useState();\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n    const goToProject = (id) => history.push(\"/project/\"+id);\n    const goToUser = (userName) => history.push(\"/showuser/\" + userName);\n\n\n    let user = \"\";\n    if (localStorage.getItem(\"userData\")) {\n        localStorage.getItem(\"userData\") ? user = localStorage.getItem(\"userData\") : user = \"\";\n\n    }\n\n    useEffect(() => {\n        if (user == \"\") {\n                 history.push(\"/login\")\n        } else {\n            async function getProjects() {\n                const projectRes = await Axios.get(\"https://tokenstart.herokuapp.com/projects/\")\n                let allProjectsList = projectRes.data;\n                setProjectList({\n                    allProjects: allProjectsList\n                });\n            }\n\n            getProjects();\n        }\n\n\n\n    }, [])\n\n    return (\n        <div>\n            {projectList == undefined ? (\n                <>\n                    <p>Please Log in to Create a Project</p>\n\n                    <p>Lit</p>\n                </>\n            ) : (\n                    <>\n                        <h4>Projects Overview</h4>\n                        <div class=\"view\">\n                        <div class=\"wrapper\">\n                        <div style={{ overflowY: \"scroll\" }} className=\"col-12 margin0a\">\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        {/* <th scope=\"col\">Edit</th> */}\n                                        <th className=\"sticky-col first-col\">Blockchain</th>\n                                        <th className=\"\">Name</th>\n                                        \n                                        {/* <th scope=\"col\">Description</th> */}\n                                        \n                                        <th scope=\"col\">In circulation</th>\n                                        <th scope=\"col\">Token Supply</th>\n                                        <th scope=\"col\">Token Name</th>\n                                        <th scope=\"col\">Creator</th>\n                                        <th scope=\"col\">Creation Date</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        React.Children.toArray(\n                                            projectList.allProjects.map(\n                                                (item, i) =>\n                                                    <>\n                                                        <tr>\n                                                        <td  className=\"iconCell sticky-col first-col\">{ChainIcons(item.tokenChain)}</td>\n                                                            {/* <td><Link to={\"/edit/project/\" + item._id}><FontAwesomeIcon icon={faEdit} /></Link></td> */}\n                                                            <td className=\"\" style={{ color: \"blue\" }} onClick={() => goToProject(item._id)}>{item.projectName}</td>\n                                                            \n                                                            {/* <td>{item.sDescription}</td> */}\n                                                            \n                                                            <td>{item.tokenSupply - item.toOwner}</td>\n                                                            <td>{item.tokenSupply}</td>\n                                                           \n                                                            <td>{item.tokenName}</td>\n                                                            <td onClick={() => goToUser(item.projectOwnerName)}>{item.projectOwnerName}</td>\n                                                            <td>{item.date.slice(0, 10)}</td>\n                                                        </tr>\n                                                    </>\n                                            )\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        </div>\n                        </div>\n                    </>\n                )\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport ChainIcons from \"../misc/chainIcon\";\nimport UserContext from \"../../context/UserContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from '../misc/ErrorNotice';\n\nimport QRCode from \"qrcode.react\";\n\nexport default function Payment(props) {\n\n    const history = useHistory();\n    const { userData, setUserData } = useContext(UserContext);\n    //const { projectInfo } = props;\n    const projectInfo = props.location.projectProps\n\n    const [paymentType, setPaymentType] = useState();\n    const [investment, setInvestment] = useState();\n    const [showQR, setShowQR] = useState();\n\n    const qrMessage = \"Send \" + investment + \" to \" + paymentType + \" Wallet ID \" + \"DFOHJIUDF8834840dkdkkd45848kejdvoih§(%/jdj\";\n\n    useEffect(() => {\n        if (localStorage.getItem(\"auth-token\").length === 0) {\n            history.push(\"/login\");\n            \n        }\n\n\n    }, []);\n\n\n\n    return <div>\n        {projectInfo === undefined ? (<p>Please Log in </p>) : (\n            <>\n                <div className=\"col-12 col-md-12 col-xl-8 margin0a\">\n                    <h2>Payment</h2>\n                    <div className=\"row\">\n                        <div className=\"col-10 col-md-6 margin0a\">\n                            <>\n                                <div className=\"horizontalCard\">\n                                    <div className=\"horizontalCardLeft\">\n                                        <div className=\"TokenModel\">\n\n                                            {ChainIcons(projectInfo.project.tokenChain)}\n                                        </div>\n                                        {/* <p className=\"noMargin\">Created <br /> {projectInfo.project.date.slice(0, 10)}</p> */}\n                                    </div>\n                                    <div className=\"horizontalCardRight\">\n                                        <p>{projectInfo.project.projectName}</p>\n                                        <p><span style={{ fontWeight: \"bold\" }}>[{projectInfo.project.tokenShort}]</span></p>\n                                        <p>{projectInfo.project.sDescription}</p>\n                                        <div className=\"collapse\" id={\"collapseCard\"}>\n\n                                            <p>{projectInfo.project.lDescription}</p>\n                                            \n                                        </div>\n\n                                        <p>Created by {projectInfo.project.projectOwnerName}</p>\n                                        <p>Started {projectInfo.project.date.slice(0, 10)}</p>\n                                        {/* <button className=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target={\"#collapseCard\"} aria-expanded=\"false\" aria-controls={\"collapseCard\"} >\n                                            More Info\n                                                </button> */}\n                                    </div>\n                                </div>\n                            </>\n\n                        </div>\n                        <form className=\"col-10 col-md-4 margin0a\">\n                            <div className=\"form-group\">\n                            <label for=\"paymentFormControlTokenShort\">Token</label>\n                                <input className=\"form-control\" type=\"text\" placeholder={projectInfo.project.tokenName + \" [\" + projectInfo.project.tokenShort +\"]\"} disabled/>\n\n                                {/* <label for=\"exampleFormControlInput1\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" /> */}\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"paymentFormControlBlockchain\">Select Payment</label>\n                                <select className=\"form-control\" id=\"exampleFormControlSelect1\" placeholder=\"Please select Blockchain for payment\" onChange={e => setPaymentType(e.target.value) }>\n                                    <option value=\"\" disabled selected>Select your option</option>\n                                    <option>TRON</option>\n                                </select>\n                            </div>\n\n                            {/* <div className=\"form-group\">\n                                <label for=\"exampleFormControlSelect2\">Example multiple select</label>\n                                <select multiple className=\"form-control\" id=\"exampleFormControlSelect2\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </select>\n                            </div> */}\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlTextarea1\">Investment (Unit = {projectInfo.project.smallestTradable}) </label>\n                                <input className=\"form-control\" type=\"number\" onChange={e => setInvestment(e.target.value)} placeholder={\"Smallest tradable unit \" + projectInfo.project.smallestTradable} min={projectInfo.project.smallestTradable} step={projectInfo.project.smallestTradable}/>\n                            </div>\n                            <button className=\"btn btn-primary mb-3\" onClick={e => {\n                                        e.preventDefault();\n                                        if (investment > 0 && investment % projectInfo.project.smallestTradable === 0 && paymentType){\n                                        setShowQR(true);}\n                                        else {alert(\"Please set payment type and investment amount\")}\n                                    \n                                    }\n                                    }>Generate Payment QR-Code</button>\n\n                        </form>\n\n\n      \n                    </div>\n\n                    { showQR && <QRCode className=\"mb-3 margin0a\" \n                        value={qrMessage}\n                        />}\n\n                </div>\n            </>\n        )\n        }</div>\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport './App.css';\nimport Home from \"./components/pages/Home\";\nimport Login from \"./components/pages/Login\";\nimport Register from \"./components/pages/Register\";\nimport About from \"./components/pages/About\";\nimport Account from \"./components/pages/Account\";\nimport Project from \"./components/pages/project\";\nimport EditProject from \"./components/pages/EditProject\";\nimport Goals from \"./components/pages/Goals\";\nimport {Route, Link, BrowserRouter, Switch} from 'react-router-dom';\nimport {NavBar, Footer} from './components/pages/parts';\nimport UserContext from \"./context/UserContext\";\nimport CreateProject from './components/pages/createProject';\nimport FourOFour from './components/pages/FourOFour';\nimport ProjectsOverview from './components/pages/ProjectsOverview';\nimport Payment from './components/pages/payment';\nimport ScrollTop from './components/misc/ScrollTop';\n\n\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token  = localStorage.getItem(\"refresh-token\");\n      console.log(token);\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        localStorage.setItem(\"refresh-token\", \"\");\n        token = \"\";\n      }\n      \n      const tokenRes = await Axios.post(\n        \"https://tokenstart.herokuapp.com/users/refreshtokenisvalid\",\n        null,\n        { headers: { \"refresh-token\": localStorage.getItem(\"refresh-token\") }}\n        );\n\n    if ( tokenRes.data != \"Token not in DB\") {\n      const userRes = await Axios.get(\"https://tokenstart.herokuapp.com/users/\",{\n        headers: {\"refresh-token\": token }, \n      });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n  }\n}\n    checkLoggedIn();\n\n    //hier Weiter https://www.youtube.com/watch?v=sWfD20ortB4\n    //state to check for in array Empty runs on start\n}, [])\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <ScrollTop/>\n      <UserContext.Provider value={{ userData, setUserData }}>\n      <NavBar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/ourgoal\" component={Goals}/>\n        <Route path=\"/projects/new\" component={CreateProject}/>\n        <Route path=\"/projects\" component={ProjectsOverview}/>\n        <Route path=\"/project/:projectId\" component={Project}/>\n        <Route path=\"/edit/project/:projectId\" component={EditProject}/>\n        <Route path=\"/account\" component={Account}/>\n        <Route path=\"/checkout\" component={Payment}/>\n        <Route path=\"/404\" component={FourOFour}/>\n      </Switch>\n    <Footer/>\n    </UserContext.Provider>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}